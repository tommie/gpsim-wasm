name: Deploy Web UI to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      EM_CACHE_DIR: .emcache
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "19"
          cache: yarn
          cache-dependency-path: ./webui/yarn.lock
      - name: Setup Automake
        run: sudo env DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends automake libtool pkg-config
      - name: Setup Emscripten
        uses: mymindstorm/setup-emsdk@v11
        with:
          version: "3.1.31"
          actions-cache-folder: "${{ env.EM_CACHE_DIR }}"
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .build
            ${{ env.EM_CACHE_DIR }}
            webui/dist
          key: ${{ runner.os }}-webui-build
      - name: Install Yarn dependencies
        run: |
          cd webui
          yarn install
      - name: Configure gpsim WASM
        run: |
          autoreconf -i
          mkdir -p .build
          cd .build
          ../wasm/doemconfigure || status=$?
          if (( status != 0 )); then
            cat config.log
            exit $status
          fi
      - name: Build gpsim WASM
        run: |
          cd .build
          make -j
      - name: Install gpsim WASM
        run: |
          make -C .build/wasm install DESTDIR="$PWD/webui/src/gpsim"
          mkdir -p webui/public/assets
          mv webui/src/gpsim/*.wasm.map webui/public/assets/
      - name: Build Web UI
        run: |
          cd webui
          yarn build
      - name: Test gpsim WASM
        run: make -C wasm check
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./webui/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
